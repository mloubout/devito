# Runner informaiton:
# Standard F8s_v2 (8 vcpus, 16 GiB memory)
# Intel XeonÂ® Platinum 8168 (SkyLake)

name: asv-benchmarks

env:
  OUTPUT_PATH: ${{ github.workspace }}
  RESOURCE_GROUP: devito-regression
  VM_NAME: asv-runner-00

on:
  # Trigger the workflow on push to the master branch
  push:
    branches:
      - master

jobs:
  # Run the asv benchmarks on the self-hosted runner
  benchmarks:
    name: benchmarks
    runs-on: ubuntu-latest #[self-hosted, asv]

    env:
      DEVITO_ARCH: "gcc-7"
      DEVITO_LANGUAGE: "openmp"
      DEVITO_BENCHMARKS: "1"
      DEVITO_LOGGING: "PERF"
      OMP_NUM_THREADS: "8"
      CC: "gcc-7"
      CXX: "g++-7"

    steps:
    - name: Checkout devito
      uses: actions/checkout@v1

    - name: Set up Python 3.7
      if: matrix.name != 'tutos-docker-gcc-py36'
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        pip install --upgrade pip

    - name: Run benchmarks
      run: |
        mkdir -p benchmarks/regression/.asv/results/
        echo " boonjour" >> benchmarks/regression/.asv/results/bonjour.txt

    - name: Stash benchmarks results
      uses: actions/upload-artifact@v2
      with:
        name: asv-results
        path: benchmarks/regression/.asv/results/

    - name: Checkout asv-results branch
      uses: actions/checkout@v1
      with:
        ref: asv-results

    - name: Recover benchmarks results
      uses: actions/download-artifact@v2
      with:
        name: asv-results
        path: benchmarksenchmarks/regression/.asv/results

    - name: Commit benchmarks results
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -f benchmarks/regression/.asv/results/
        git status
        git commit -m "Commit ASV results"

    - name: Push benchmarks results to the asv-results branch
      uses: ad-m/github-push-action@master
      with:
        branch: asv-results
        force: true
        github_token: ${{ secrets.GITHUB_TOKEN }}

